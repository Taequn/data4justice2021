geom_function(fun=dnorm, args=list(mean=0.07507912, sd=0.11360153),
color="black", width=2)+
labs(x="Overall effect",
y="Density",
title="Histogram of overall effect of pleas",
subtitle= "Mean: 0.075, sd: 0.113")
ggplot(final.df, aes(x=proportions))+
geom_histogram(aes(y=..density..), color="white", fill="dark red")+
geom_function(fun=dnorm, args=list(mean=0.07507912, sd=0.11360153),
color="black", width=2)+
labs(x="Overall effect",
y="Density",
title="Histogram of overall effect of pleas",
subtitle= "Mean: 0.075, SD: 0.113")
csv.3.plea.plot <- csv.3.plea %>%
mutate(pleaSuccess = case_when(
pleaSuccess == 1 ~ "Yes",
TRUE ~ "No"
))%>%
group_by(sex, pleaSuccess)%>%
summarise(
n = n()
)
p1<-ggplot(csv.3.plea.plot, aes(x=raceChar, y=n, fill=pleaSuccess))+
geom_bar(position="fill", stat="identity")+
labs(x="Races",
y="Proportion",
fill="Plea success",
title="Proportion of successful pleas per race")
csv.3.plea.plot <- csv.3.plea %>%
mutate(pleaSuccess = case_when(
pleaSuccess == 1 ~ "Yes",
TRUE ~ "No"
))
p1<-ggplot(csv.3.plea.plot, aes(x=sex, y=n, fill=pleaSuccess))+
geom_bar(position="fill", stat="identity")+
labs(x="Races",
y="Proportion",
fill="Plea success",
title="Proportion of successful pleas per race")
p1
csv.3.plea.plot <- csv.3.plea %>%
mutate(pleaSuccess = case_when(
pleaSuccess == 1 ~ "Yes",
TRUE ~ "No"
))%>%
group_by(sex, pleaSuccess)%>%
summarise(
n = n()
)
p1<-ggplot(csv.3.plea.plot, aes(x=sex, y=n, fill=pleaSuccess))+
geom_bar(position="fill", stat="identity")+
labs(x="Races",
y="Proportion",
fill="Plea success",
title="Proportion of successful pleas per race")
p1
csv.3.plea.plot1 <- csv.3.plea %>%
mutate(pleaSuccess = case_when(
pleaSuccess == 1 ~ "Yes",
TRUE ~ "No"
))%>%
mutate(pleaPoss = case_when(severity <= 7 ~ "Yes",
(severity >= 13 & severity <= 16) ~ "Yes",
(severity >= 51 & severity <= 57) ~ "Yes",
TRUE ~ "No"))%>%
filter(pleaPoss=="No")%>%
group_by(sex, pleaSuccess)%>%
summarise(
n = n()
)
p2<-ggplot(csv.3.plea.plot1, aes(x=sex, y=n, fill=pleaSuccess))+
geom_bar(position="fill", stat="identity")+
labs(x="Races",
y="Proportion",
fill="Plea success",
title="Proportion of successful pleas per race",
subtitle="For cases with no suggested probation")
(p1|p2)
########################################################################
# Chisq.test
########################################################################
csv.3.plea <- csv.3.updated %>%
mutate(pleaSuccess = case_when(stayexec==1~ 1,
impose==1 ~ 1,
TRUE ~ 0))%>%
filter(!(is.na(raceChar)),
raceChar!="Unknown",
raceChar!="Other")%>%
mutate(sexChar == case_when(
sex==1 ~ "Male",
sex==2 ~ "Female"
))
########################################################################
# Chisq.test
########################################################################
csv.3.plea <- csv.3.updated %>%
mutate(pleaSuccess = case_when(stayexec==1~ 1,
impose==1 ~ 1,
TRUE ~ 0))%>%
filter(!(is.na(raceChar)),
raceChar!="Unknown",
raceChar!="Other")%>%
mutate(sexChar == case_when(
sex==1 ~ "Male",
sex==2 ~ "Female"
))
############################################################
# Working with data
############################################################
csv.3.updated <- csv.3 %>%
mutate(fullname = paste(jlname, jfname))%>%
mutate(rateSev = case_when(severity <= 12 ~ "Standard",
(severity >= 13 & severity <= 20) ~ "Sexual assault",
(severity >= 51 & severity <= 59) ~ "Drugs",
TRUE ~ "Something's wrong"))%>%
#Establish the postive/negative time difference
#########
# PLLEEEAAASE
# TO DO:
# double check the it works fine because I'm only 70% certain in this part
#########
mutate(timeDif = case_when(
confine > Maxtime ~ (confine-Maxtime),
confine < Mintime ~ -1*(Mintime-confine),
TRUE ~ 0
))%>%
mutate(timeDifTimes = case_when(
confine > Maxtime ~ (confine/Maxtime),
confine < Mintime ~ (confine/Mintime),
TRUE ~ 0
))%>%
#creating a column for neg/positive bias
mutate(bias = case_when(
timeDif < 0 ~ "NEG",
timeDif > 0 ~ "POS",
timeDif == 0 ~ "NO"
))%>%
mutate(raceChar = case_when(
race==1 ~ "White",
race==2 ~ "Black",
race==3 ~ "Native",
race==4 ~ "Hispanic",
race==5 ~ "Asian",
race==6 ~ "Other",
race==7 ~ "Unknown"
))%>%
mutate(sexChar == case_when(
sex==1 ~ "Male",
sex==2 ~ "Female"
))
########################################################################
# Chisq.test
########################################################################
csv.3.plea <- csv.3.updated %>%
mutate(pleaSuccess = case_when(stayexec==1~ 1,
impose==1 ~ 1,
TRUE ~ 0))%>%
filter(!(is.na(raceChar)),
raceChar!="Unknown",
raceChar!="Other")%>%
mutate(sexChar = case_when(
sex==1 ~ "Male",
sex==2 ~ "Female"
))
csv.3.plea.plot <- csv.3.plea %>%
mutate(pleaSuccess = case_when(
pleaSuccess == 1 ~ "Yes",
TRUE ~ "No"
))%>%
group_by(sex, pleaSuccess)%>%
summarise(
n = n()
)
p1<-ggplot(csv.3.plea.plot, aes(x=sex, y=n, fill=pleaSuccess))+
geom_bar(position="fill", stat="identity")+
labs(x="Races",
y="Proportion",
fill="Plea success",
title="Proportion of successful pleas per race")
csv.3.plea.plot1 <- csv.3.plea %>%
mutate(pleaSuccess = case_when(
pleaSuccess == 1 ~ "Yes",
TRUE ~ "No"
))%>%
mutate(pleaPoss = case_when(severity <= 7 ~ "Yes",
(severity >= 13 & severity <= 16) ~ "Yes",
(severity >= 51 & severity <= 57) ~ "Yes",
TRUE ~ "No"))%>%
filter(pleaPoss=="No")%>%
group_by(sex, pleaSuccess)%>%
summarise(
n = n()
)
p2<-ggplot(csv.3.plea.plot1, aes(x=sex, y=n, fill=pleaSuccess))+
geom_bar(position="fill", stat="identity")+
labs(x="Races",
y="Proportion",
fill="Plea success",
title="Proportion of successful pleas per race",
subtitle="For cases with no suggested probation")
(p1|p2)
csv.3.plea.plot <- csv.3.plea %>%
mutate(pleaSuccess = case_when(
pleaSuccess == 1 ~ "Yes",
TRUE ~ "No"
))%>%
group_by(sexChar, pleaSuccess)%>%
summarise(
n = n()
)
p1<-ggplot(csv.3.plea.plot, aes(x=sexChar, y=n, fill=pleaSuccess))+
geom_bar(position="fill", stat="identity")+
labs(x="Races",
y="Proportion",
fill="Plea success",
title="Proportion of successful pleas per race")
csv.3.plea.plot1 <- csv.3.plea %>%
mutate(pleaSuccess = case_when(
pleaSuccess == 1 ~ "Yes",
TRUE ~ "No"
))%>%
mutate(pleaPoss = case_when(severity <= 7 ~ "Yes",
(severity >= 13 & severity <= 16) ~ "Yes",
(severity >= 51 & severity <= 57) ~ "Yes",
TRUE ~ "No"))%>%
filter(pleaPoss=="No")%>%
group_by(sexChar, pleaSuccess)%>%
summarise(
n = n()
)
p2<-ggplot(csv.3.plea.plot1, aes(x=sexChar, y=n, fill=pleaSuccess))+
geom_bar(position="fill", stat="identity")+
labs(x="Races",
y="Proportion",
fill="Plea success",
title="Proportion of successful pleas per race",
subtitle="For cases with no suggested probation")
(p1|p2)
csv.3.plea.plot <- csv.3.plea %>%
mutate(pleaSuccess = case_when(
pleaSuccess == 1 ~ "Yes",
TRUE ~ "No"
))%>%
group_by(sexChar, pleaSuccess)%>%
summarise(
n = n()
)
p1<-ggplot(csv.3.plea.plot, aes(x=sexChar, y=n, fill=pleaSuccess))+
geom_bar(position="fill", stat="identity")+
labs(x="Gender",
y="Proportion",
fill="Plea success",
title="Proportion of successful pleas per race")
csv.3.plea.plot1 <- csv.3.plea %>%
mutate(pleaSuccess = case_when(
pleaSuccess == 1 ~ "Yes",
TRUE ~ "No"
))%>%
mutate(pleaPoss = case_when(severity <= 7 ~ "Yes",
(severity >= 13 & severity <= 16) ~ "Yes",
(severity >= 51 & severity <= 57) ~ "Yes",
TRUE ~ "No"))%>%
filter(pleaPoss=="No")%>%
group_by(sexChar, pleaSuccess)%>%
summarise(
n = n()
)
p2<-ggplot(csv.3.plea.plot1, aes(x=sexChar, y=n, fill=pleaSuccess))+
geom_bar(position="fill", stat="identity")+
labs(x="Gender",
y="Proportion",
fill="Plea success",
title="Proportion of successful pleas per race",
subtitle="For cases with no suggested probation")
(p1|p2)
library(leaflet)
library(tidyverse)
library(rgdal)
library(sf)
csv.1<-read_csv("countycodes.csv")
csv.2<-read_csv("grids.csv")
csv.3<-read_csv("allmn.csv")
############################################################
# Working with data
############################################################
csv.3.updated <- csv.3 %>%
mutate(fullname = paste(jlname, jfname))%>%
mutate(rateSev = case_when(severity <= 12 ~ "Standard",
(severity >= 13 & severity <= 20) ~ "Sexual assault",
(severity >= 51 & severity <= 59) ~ "Drugs",
TRUE ~ "Something's wrong"))%>%
#Establish the postive/negative time difference
#########
# PLLEEEAAASE
# TO DO:
# double check the it works fine because I'm only 70% certain in this part
#########
mutate(timeDif = case_when(
confine > Maxtime ~ (confine-Maxtime),
confine < Mintime ~ -1*(Mintime-confine),
TRUE ~ 0
))%>%
#creating a column for neg/positive bias
mutate(bias = case_when(
timeDif < 0 ~ "NEG",
timeDif > 0 ~ "POS",
timeDif == 0 ~ "NO"
))%>%
mutate(raceChar = case_when(
race==1 ~ "White",
race==2 ~ "Black",
race==3 ~ "Native",
race==4 ~ "Hispanic",
race==5 ~ "Asian",
race==6 ~ "Other",
race==7 ~ "Unknown"
))
#
# Test run on the number of judges with bias
#
csv.3.updated %>%
group_by(fullname, bias)%>%
summarise(
biased = n()
)%>%
filter(bias=="POS")%>%               #looking for positive bias
arrange(-biased)
#
#Check a single judge
#
csv.3.updated %>%
filter(fullname=="Quam Jay M.",          #Choose the name here
bias=="POS")%>%
group_by(raceChar)%>%
summarise(
time = mean(timeDif)
)
#
#Checking mean bias over sample
#
csv.3.updated %>%
filter(raceChar!="Unknown",
raceChar!="Other",
!(is.na(raceChar)),
inctype!=2)%>%
group_by(raceChar)%>%
summarise(
NumOfCases = n(),
MeanTimeDif = mean(timeDif),
)
################################################################################
############ADD COUNTY NAMES TO csv.3.updated
################################################################################
csv.3.updated$countyChar <- csv.1[match(csv.3.updated$county, csv.1$Code),2]
# mn_sf <- st_read("shp_counties_mn/mn_county_boundaries.shp")
mn_sf <- readOGR(dsn="shp_counties_mn",layer="mn_county_boundaries")
ams_ll <- spTransform(mn_sf, CRS("+init=epsg:4326"))
leaflet() %>%
addTiles() %>%
addPolygons(data=ams_ll, color = "#444444", weight = 1, smoothFactor = 0.5,
opacity = 1.0, fillOpacity = 0.5,
fillColor = ~colorQuantile("YlOrRd", AREA)(AREA),
highlightOptions = highlightOptions(color = "white", weight = 2,
bringToFront = TRUE), label = ~CTY_NAME)
library(leaflet)
library(tidyverse)
library(rgdal)
library(sf)
############################################################
# Working with data
############################################################
csv.3.updated <- csv.3 %>%
mutate(fullname = paste(jlname, jfname))%>%
mutate(rateSev = case_when(severity <= 12 ~ "Standard",
(severity >= 13 & severity <= 20) ~ "Sexual assault",
(severity >= 51 & severity <= 59) ~ "Drugs",
TRUE ~ "Something's wrong"))%>%
#Establish the postive/negative time difference
#########
# PLLEEEAAASE
# TO DO:
# double check the it works fine because I'm only 70% certain in this part
#########
mutate(timeDif = case_when(
confine > Maxtime ~ (confine-Maxtime),
confine < Mintime ~ -1*(Mintime-confine),
TRUE ~ 0
))%>%
#creating a column for neg/positive bias
mutate(bias = case_when(
timeDif < 0 ~ "NEG",
timeDif > 0 ~ "POS",
timeDif == 0 ~ "NO"
))%>%
mutate(raceChar = case_when(
race==1 ~ "White",
race==2 ~ "Black",
race==3 ~ "Native",
race==4 ~ "Hispanic",
race==5 ~ "Asian",
race==6 ~ "Other",
race==7 ~ "Unknown"
))
#
# Test run on the number of judges with bias
#
csv.3.updated %>%
group_by(fullname, bias)%>%
summarise(
biased = n()
)%>%
filter(bias=="POS")%>%               #looking for positive bias
arrange(-biased)
#
#Check a single judge
#
csv.3.updated %>%
filter(fullname=="Quam Jay M.",          #Choose the name here
bias=="POS")%>%
group_by(raceChar)%>%
summarise(
time = mean(timeDif)
)
#
#Checking mean bias over sample
#
csv.3.updated %>%
filter(raceChar!="Unknown",
raceChar!="Other",
!(is.na(raceChar)),
inctype!=2)%>%
group_by(raceChar)%>%
summarise(
NumOfCases = n(),
MeanTimeDif = mean(timeDif),
)
csv.3.updated$countyChar <- csv.1[match(csv.3.updated$county, csv.1$Code),2]
# mn_sf <- st_read("shp_counties_mn/mn_county_boundaries.shp")
mn_sf <- readOGR(dsn="shp_counties_mn",layer="mn_county_boundaries")
ams_ll <- spTransform(mn_sf, CRS("+init=epsg:4326"))
leaflet() %>%
addTiles() %>%
addPolygons(data=ams_ll, color = "#444444", weight = 1, smoothFactor = 0.5,
opacity = 1.0, fillOpacity = 0.5,
fillColor = ~colorQuantile("YlOrRd", AREA)(AREA),
highlightOptions = highlightOptions(color = "white", weight = 2,
bringToFront = TRUE), label = ~CTY_NAME)
library("quantreg")
data("uis")
mu <- mean(uis$BECK)
paste("The mean of BECK is", mean(mu))
mean(uis$BECK)
median(uis$BECK)
n<-nrow(uis)
n
se
se = sd(uis$BECK)/sqrt(n)
se
se
se
sd(uis$BECK)
(value<-(qt(.95, n-1)*se)+mu)
se
qt(.95, n-1)
mu <- mean(uis$BECK)
(value<-(qt(.95, n-1)*se)+13)
library("boot")
data("nodal")
?nodal
nodal <- nodal %>%
mutate(sev = case_when(xray==1~1,
grade==1~1,
stage==1~1,
TRUE ~ 0))
ggplot(nodal, aes(x=factor(r),
fill=factor(sev)))+
geom_bar(position="dodge")+
geom_hline(yintercept=0)+
theme_bw()
table(nodal$sev, nodal$r)
prop.table(table(nodal$sev, nodal$r),
margin = 2)
prop.table(table(nodal$sev, nodal$r),
margin = 1)
# "success" = nodal involvement
#non severe
x1<-1
n1<-16
(p.hat1<- x1/n1)
library(binom)
binom.confint(x=x1, n=n1)
# 95% CI: 0.0111193448 0.2832874
#severe
x2<-19
n2<-37
(p.hat2<- x2/n2)
library(binom)
binom.confint(x=x2, n=n2)
# 95% CI: 0.3589490 0.6655360
# Two sample approach
prop.test(x=c(x1,x2),
n=c(n1,n2))
# -0.6957887 -0.2062383
#H0: p1-p2 = 0
#Ha: p1-p2 != 0
# p-value: 0.005094 < 0.05 --> Reject H0 in favor of Ha
#                          --> We have evidence that nodal involvement is different
#                          --> in patients with severe sympotoms (z=2.8, p=0.0051).
# Two sample approach
prop.test(x=c(x1,x2),
n=c(n1,n2))
